@import "headings";
@import "compass";


%fontcostam {
  font: {
    family: "Adobe Arabic";
    size:  30px;
    weight: bold;
  }
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}


.box { @include border-radius(30px);}



.container {width: 100%;}

.cont1 {float: left; width: 300 / 960 *100%;}
.cont2 {float: right; width: 400 / 960 * 100%;}


#main {
  width: 100%;
  p { width: 200px;}
  div { width: 300px;}
  &:hover {width: 500px;}
  &-sidebar {width: 900px;}
  @include border-radius(10px);
}
.sidebar {
  width: 300px;
  @media screen and (orientation: landscape){
    width: 1000px;
  }

}

@mixin adjust-location($x, $y) {
  @if unitless($x) {
    @error "$x may not be unitless, was #{$x}.";
  }
  @if unitless($y) {
    @error "$y may not be unitless, was #{$y}.";
  }
  position: relative; left: $x; top: $y;
}

.box1 {@include adjust-location(10px,2px)}

$type: mo;
p {
  @if $type == ocean {
    color: blue;
  } @else if $type == matador {
    color: red;
  } @else if $type == monster {
    color: green;
  } @else {
    color: black;
  }
}

@for $i from 1 through 5 {
  .it-#{$i} {width: ($i*5)+px;}
}

@each $animals in puma, jagura, slon, waz {
  .animal-#{$animals}-icon {
    background-image: url("/images/#{$animals}.png");
      }
}

@each $animal, $color, $cursor in (puma, black, default),
        (sea-slug, blue, pointer),
        (egret, white, move) {
  .#{$animal}-icon {
    background-image: url('/images/#{$animal}.png');
    border: 2px solid $color;
    cursor: $cursor;
  }
}

$i: 6;
@while $i > 0 {
  .itemo-#{$i} { width: 2em * $i; }
  $i: $i - 2;
}

@mixin clearfixor {
  display: inline-block;
  &:after {
    content: ".";
    display: block;
    height: 0;
    clear: both;
    visibility: hidden;
  }
  * html & { height: 1px }
}

.box2 {@include clearfixor;}

@mixin large-text {
  a {
  font: {
    family: Arial, sans-serif;
    size: 20px;
    weight: bold;
  }
  color: #ff0000;
}}

.page-title {
  @include large-text;
  padding: 4px;
  margin-top: 10px;
}

@include large-text;

@mixin highlighted-background { background-color: #fc0; }
@mixin header-text { font-size: 20px; }

@mixin compound {
  @include highlighted-background;
  @include header-text;
}



.box4 {
  @include compound;
}

@mixin sexy-border($width: 5px, $style: dashed, $color: #fff) {
  border:  #{$width}, #{$style}, #{$color};
}
.p1 { @include sexy-border($color: #000); }
h6 { @include sexy-border(10px, dotted, #000); }

@mixin box-shadow($shadows...) {
  -moz-box-shadow: $shadows;
  -webkit-box-shadow: $shadows;
  box-shadow: $shadows;
}

.shadows {
  @include box-shadow(2px 4px 5px #666, 2px 6px 10px #999);
}

@mixin colors($text, $background, $border) {
  color: $text;
  background-color: $background;
  border-color: $border;
}

$values: #ff0000, #00ff00, #0000ff;
.primary {
  @include colors($values...);
}

$value-map: (text: #00ff00, background: #0000ff, border: #ff0000);
.secondary {
  @include colors($value-map...);
}



$grid-width: 40px;
$gutter-width: 10px;

@function grid-width($n) {
  @return $n * $grid-width + ($n - 1) * $gutter-width;
}

#sidebar {
  width: grid-width(5);
}

#costam {
  width: 40%;
  height: 40%;
  float: left;
  margin: 10%;
  @include clearfix;
}
.gradient-example {
  width: 180px;
  height: 180px;
  background: red;
  float: left;
  margin: 20px 20px 20px 20px;
  }
#radial-gradient {
  @include background-image(radial_gradient(40px 80px, red, blue));
}
#linear-gradient {
  @include  background-image(_linear_gradient(to bottom right, white, #dddccc));
}
#v-gradient {
  @include  background-image(linear-gradient(-45deg, red, blue));

}
#v-gradient-1 {
  @include background-image(linear-gradient(0deg, blue, green 40%, red));


}

.simple-box-shadow {
  @include single-box-shadow;
}
.multi-box-shadow {
  @include  box-shadow(-1px 1px 15px 5px blue, 1px 1px 5px 5px red, 1px 1px 15px 15px green );
}

.opacity-example {
  background: red;
  width: 40px;
  height: 40px;
  float: left;
}

@for $i from 1 through 10 {

  $y: $i/10;

  #opacity-#{$i} {
    @include opacity($y);
  }
}

// TODO cos tam